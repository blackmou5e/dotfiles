export PATH=$HOME/.local/bin:$PATH
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

# HOMEBREW
eval "$(/opt/homebrew/bin/brew shellenv)"

# ZINIT
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"

if [ ! -d "$ZINIT_HOME" ]; then
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
fi

source "${ZINIT_HOME}/zinit.zsh"


# PLUGINS
# big three
zinit light zsh-users/zsh-syntax-highlighting
#zinit light zsh-users/zsh-autosuggestions
zinit light zsh-users/zsh-completions

# another
zinit light Aloxaf/fzf-tab

# COMPLETIONS
autoload -U compinit && compinit
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Za-z}'
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"
zstyle ':completion:*' menu no
zstyle ':fzf-tab:complete:cd:*' fzf-preview 'ls --color $realpath'

# HISTORY
HISTSIZE=5000
HISTFILE=~/.zsh_history
SAVEHIST=$HISTSIZE
HISTDUP=erase
setopt appendhistory
setopt sharehistory
setopt hist_ignore_space
setopt hist_ignore_all_dups
setopt hist_save_no_dups
setopt hist_ignore_dups
setopt hist_find_no_dups

# KEYBINDS
bindkey -e
bindkey '^p' history-search-backward
bindkey '^n' history-search-forward

# SHELL INTEGRATIONS
source ~/.fzf.zsh

# GPG
#eval $(gpg-agent --daemon)
export GPG_TTY=$(tty)
export SSH_AUTH_SOCK=${HOME}/.ssh/agent

function reload_ssh {
  # pkcs11_path="/usr/lib/ssh-keychain.dylib"
  # pkcs11_path="/usr/local/lib/opensc-pkcs11.so"
  # pkcs11_path="/opt/homebrew/lib/pkcs11/opensc-pkcs11.so"
  ssh_add_path="ssh-add"
  ssh_agent_path="ssh-agent"

  $ssh_add_path -D
  if [ "$1" = "-f" ]; then
    echo "Forcibly killing off previous process"
    launchctl unload ~/Library/LaunchAgents/com.zerowidth.launched.ssh_agent.plist
    pkill -9 ssh-agent
    pkill -9 ssh-pkcs11-helper
    launchctl load -w ~/Library/LaunchAgents/com.zerowidth.launched.ssh_agent.plist
  else
    $ssh_add_path -e $pkcs11_path >> /dev/null
    if [ $? -gt 0 ]; then
      echo "Failed to remove previous card. Retry or run with -f option"
    fi
  fi

  $ssh_add_path -s $pkcs11_path
  $ssh_add_path
}

# ssh-askpass
#export SSH_ASKPASS=/user/loca/bin/ssh-askpass

# SSH AGENT
#export SSH_ASKPASS=/usr/local/bin/ssh-askpass
#launchctl setenv SSH_ASKPASS $SSH_ASKPASS
#SSH_ENV="/tmp/.ssh_environment_added"
#env_display="`/bin/launchctl getenv DISPLAY`"
#if [[ "x${env_display}" == "x" ]]; then
#	/bin/launchctl setenv DISPLAY :0
#fi
#
#function start_agent {
#    echo "Initializing new SSH agent..."
#    echo > "${SSH_ENV}"
#    /usr/bin/ssh-add -c $HOME/.ssh/id_rsa; # my key
#}
#
## Source SSH settings, if applicable
#
#if [ -f "${SSH_ENV}" ]; then
#    ps -ef | grep ssh-agent > /dev/null || {
#        start_agent;
#    }
#else
#    start_agent;
#fi

h=()
if [[ -r ~/.ssh/config ]]; then
  h=($h ${${${(@M)${(f)"$(cat ~/.ssh/config)"}:#Host *}#Host }:#*[*?]*})
fi
if [[ -r ~/.ssh/known_hosts ]]; then
  h=($h ${${${(f)"$(cat ~/.ssh/known_hosts{,2} || true)"}%%\ *}%%,*}) 2>/dev/null
fi
if [[ $#h -gt 0 ]]; then
  zstyle ':completion:*:ssh:*' hosts $h
  zstyle ':completion:*:scp:*' hosts $h
  zstyle ':completion:*:slogin:*' hosts $h
fi

# TOOLS
# YC cli
# The next line updates PATH for Yandex Cloud CLI.
if [ -f '/Users/gnikishin/yandex-cloud/path.bash.inc' ]; then source '/Users/gnikishin/yandex-cloud/path.bash.inc'; fi
# The next line enables shell command completion for yc.
if [ -f '/Users/gnikishin/yandex-cloud/completion.zsh.inc' ]; then source '/Users/gnikishin/yandex-cloud/completion.zsh.inc'; fi

# ALIASES
alias ls='ls --color'
alias tn="tmux -u new -s $1"
alias ts="tmux -u ls"
alias tc="tmux -u a -t $1"

source <(werf completion --shell=zsh)
source <(kubectl completion zsh)

eval "$(starship init zsh)"
